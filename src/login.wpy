<style>
  .img {
    width: 100%;
    height: 100%;
    position: absolute;
  }
  .container {
    height: 100%;
    display: flex;
    flex-direction: column;
    padding: 0;
    box-sizing: border-box;
    /* background-color: #f2f2f2;     */
  }
  .login-icon {
    flex: none;
    margin: 0 auto;
    margin-top: 200rpx;
  }
  .login-img {
    width: 220rpx;
    height: 220rpx;
    border-radius: 110rpx;
    opacity: 0.6;
  }
  .login-from {
    margin-top: 90px;
    flex: auto;
    height: 100%;
  }
  /* input */
  .myno {
    width: 90%;
    height: 80rpx;
    margin: 0 auto;
    border: 1px solid #ccc;
    border-radius: 50rpx;
  }
  .mypwd {
    width: 90%;
    height: 80rpx;
    margin: 0 auto;
    border: 1px solid #ccc;
    border-radius: 50rpx;
    margin-top: 20rpx;
  }
  /*button*/
  .loginBtnView {
    margin-top: 0px;
    margin-bottom: 0px;
    padding-bottom: 0px;
  }
  .loginBtn {
    width: 90%;
    height: 80rpx;
    line-height: 80rpx;
    margin-top: 15px;
    color: #fff;
    background-color: #7e8ef0;
    border: 0.1rpx solid #ccc;
    border-radius: 40rpx;
    padding: 1px;
  }
  .nameImage,
  .keyImage {
    margin-right: 10px;
    width: 24px;
    height: 24px
  }
  .err {
    border: 2px solid red;
    width: 90%;
    height: 80rpx;
    margin: 5px auto;
    border-radius: 50rpx;
  }
</style>

<template>
  <view class="container">
    <view class="login-from">
      <form class='form'>
        <view class="{{ errorClass ? 'err' : 'myno' }}">
          <!-- username -->
          <view style="padding: 4px;" class="weui-cell weui-cell_input">
            <image class="nameImage" src="https://cdn4.iconfinder.com/data/icons/ionicons/512/icon-person-512.png"></image>
            <view class="weui-cell__hd">
              <view style="width: 60px;" class="weui-label">账号</view>
            </view>
            <view class="weui-cell__bd">
              <input class="weui-input" bindinput="getUsername" name="username" placeholder="输入账号" />
            </view>
          </view>
        </view>
        <view class="{{ errorClass ? 'err' : 'mypwd' }}">
          <!-- password -->
          <view style="padding: 4px;" class="weui-cell weui-cell_input">
            <image class="nameImage" src="https://cdn4.iconfinder.com/data/icons/glyphs/24/icons_password-256.png"></image>
            <view class="weui-cell__hd">
              <view style="width: 60px;" class="weui-label">密码</view>
            </view>
            <view class="weui-cell__bd">
              <input class="'weui-input" bindinput="getPsw" type="password" name="password" placeholder="输入密码" />
            </view>
          </view>
        </view>
        <!--Button-->
        <view class="loginBtnView">
          <button class="loginBtn" form-type='submit' catchtap='loginWithName'>用户名登录</button>
        </view>
        <!--Button-->
        <view class="loginBtnView">
          <button class="loginBtn" form-type='submit' catchtap='loginWithMobile'>手机号登录</button>
        </view>
        <!--Button-->
        <view class="loginBtnView">
          <button class="loginBtn" form-type='submit'>设置</button>
        </view>
      </form>
    </view>
  </view>
  <move-verify bind:result="verifyResult"></move-verify>
</template>

<script>
  import wepy from 'wepy';
  import hexMD5 from './utils/MD5.js'
  import message from './utils/toast.js'
  import login from './utils/login.js'
  import format from './utils/timeFormat.js'
  var appUrl = wepy.$instance.globalData.appUrl
  var token = wx.getStorageSync('current_user')
  export default class Login extends wepy.page {
    config = {
      navigationBarTitleText: '深圳应急APP',
      "usingComponents": {
        "move-verify": "/components/moveverify/moveverify"
      }
    };
    data = {
      isFlag: false,
      _psw: '',
      username: '',
      errorClass: false,
    }
    onLoad() {
      console.log('Login onLoad ')
      console.log(this.isFlag)
      // console.log(token)
      if(token) {
        this.isFlag = true
        this.tokenLogin()
        console.log('onLoad <if> statement')
        console.log(this.isFlag)
      }
    }

    tokenLogin() {
        wepy.request({
          url: appUrl + '/user/token', //开发者服务器接口地址",
          data: {
            token: token,
            identityIsChecked: this.isFlag
          }, //请求的参数",
          method: 'GET',
          dataType: 'json', //如果设为json，会尝试对返回的数据做一次 JSON.parse
          success: res => {
            console.log('tokenLogin callback func')
            console.log(res)
            if (res.data.errorCode == 10010) {
              console.log("token请求无法连接到服务器");
            } else if (res.data.errorCode == 10012) {
              console.log("token请求无法连接到服务器");
            } else if (res.data.errorCode == 0) {
              console.log(res.data.data.operator.iId)
              let id = res.data.data.operator.iId;
              wepy.$instance.globalData.iId = id;
              wepy.$instance.globalData.username = res.data.data.operator.vcDisplayname
              console.log('the username is ' + this.username)
              wepy.switchTab({
                url: '/pages/event/event',
                success: function() {
                  var page = getCurrentPages().pop();
                  if (page == undefined || page == null) return;
                  page.onLoad();
                }
              });
            }
          },
          fail: () => {},
          complete: () => {}
        });
      }

    methods = {
      verifyResult() {
        console.log("验证通过");
        this.isFlag = true
      },
      /******************* Login with name *******************/
      getPsw(e) {
        this._psw = e.detail.value
      },
      getUsername(e) {
        this.username = e.detail.value
      },
      loginWithName() {
        // console.log(this.isFlag);
        // console.log(this._psw);
        // console.log(this.username);
        // console.log("app后台IP：============" + appUrl);
        var password;
        password = hexMD5.hexMD5(this._psw);
        // console.log("md5加密后的密码为：============" + password);
        wepy.request({
          url: appUrl + '/user/loginWithName', //开发者服务器接口地址",
          data: {
            user: this.username,
            pwd: password,
            identityIsChecked: this.isFlag
          }, //请求的参数",
          method: 'GET',
          dataType: 'json', //如果设为json，会尝试对返回的数据做一次 JSON.parse
          success: res => {
            if (this.username == '' || this._psw == '' || this.username == null || this._psw == null) {
              message.showMessage('错误', '用户名或密码不能为空')
              this.setData({
                errorClass: true
              })
            } else if (!this.isFlag) {
              message.showMessage('错误', '滑动验证!')
            } else if (res.data.errorCode == 10001) {
              message.showMessage('错误', '用户名不存在')
              // refreshCode();
            } else if (res.data.errorCode == 10000) {
              login.failed();
            } else if (res.data.errorCode == 10009) {
              login.failed();
            } else if (res.data.errorCode == 10012) {
              message.showMessage('错误', '您的身份证尚未录入系统，请登录后台管理系统，完善身份证信息后再登录!')
            } else if (res.data.errorCode == 0) {
              console.log(res)
              if (res.data.data.token != null && res.data.data.token != "") {
                wx.setStorageSync('current_user', res.data.data.token)
              }
              let id = res.data.data.operator.iId;
              wepy.$instance.globalData.iId = id;
              wepy.$instance.globalData.username = res.data.data.operator.vcName //this.username
              wepy.$instance.globalData.nickname = res.data.data.operator.vcDisplayname
              // console.log('the username is ' + this.username)
              console.log('the id is:' + wepy.$instance.globalData.iId)
              wepy.switchTab({
                url: '/pages/event/event',
                success: function() {
                  var page = getCurrentPages().pop();
                  if (page == undefined || page == null) return;
                  page.onLoad();
                }
              });
            }
          },
          fail: (res) => {
            console.log('From fail func')
            console.log(res)
            console.log("无法连接到服务器!");
          }
          // complete: () => {}
        });
      }
    }
    /******************** Login with mobile *******************/
    loginWithMobile() {
      console.log(this.isFlag);
      console.log(this._psw);
      console.log(this.username);
      var password;
      password = hexMD5.hexMD5(this._psw);
      console.log("md5加密后的密码为：============" + password);
      wepy.request({
        url: appUrl + '/user/loginWithMobile', //开发者服务器接口地址",
        data: {
          //user: this.username,
          mobile: this.username,
          pwd: password,
          identityIsChecked: this.isFlag
        }, //请求的参数",
        method: 'GET',
        dataType: 'json', //如果设为json，会尝试对返回的数据做一次 JSON.parse
        success: res => {
          if (this.username == '' || this._psw == '' || this.username == null || this._psw == null) {
            message.showMessage('错误', '用户名或密码不能为空')
            this.setData({
              errorClass: true
            })
          } else if (!this.isFlag) {
            message.showMessage('错误', '滑动验证!')
          } else if (res.data.errorCode == 10001) {
            message.showMessage('错误', '手机号不存在!')
            // refreshCode();
          } else if (res.data.errorCode == 10000) {
            login.failed();
          } else if (res.data.errorCode == 10009) {
            login.failed();
          } else if (res.data.errorCode == 10012) {
            message.showMessage('错误', '您的身份证尚未录入系统，请登录后台管理系统，完善身份证信息后再登录!')
          } else if (res.data.errorCode == 0) {
            let id = res.data.data.operator.iId;
            wepy.$instance.globalData.iId = id;
            wepy.$instance.globalData.username = this.username
            wepy.switchTab({
              url: '/pages/event/event',
              success: function() {
                var page = getCurrentPages().pop();
                if (page == undefined || page == null) return;
                page.onLoad();
              }
            });
          }
        },
        fail: () => {
          console.log("无法连接到服务器!");
        }
      });
    }
  }
</script>
